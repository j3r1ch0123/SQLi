#!/usr/bin/env python3.11
import requests
import time

def exploit(url, param, payload):
    full_url = url + param + payload
    print(f"[+] Testing {payload} on {full_url}")
    
    try:
        start = time.time()
        response = requests.get(full_url)
        end = time.time()

        response_time = end - start
        content_length = len(response.content)
        status_code = response.status_code

        print(f"[+] Status code: {status_code}")
        print(f"[+] Content length: {content_length} bytes")
        print(f"[+] Response time: {response_time:.2f} seconds")
        
        with open("output.txt", "a") as theoutput:
            theoutput.write(f"Status code: {status_code}...\n")
            theoutput.write(f"URL: {full_url}...\n")
            theoutput.write(f"Content Length: {content_length} bytes...\n")
            theoutput.write(f"Response time: {response_time:.2f} seconds...\n")
    
    except requests.RequestException as e:
        print(f"[-] Error occurred: {e}")
        with open("error.log", "a") as thelog:
            thelog.write(str(e))

if __name__ == "__main__":
    payload_list = "payloads.txt"
    payloads = []
    with open(payload_list, "r") as thepayloads:
        for line in thepayloads:
            payloads.append(line)

    url = input("Enter the vulnerable URL (e.g. https://example.com/vulnerable_uri): ")
    if not url.startswith("http"):
        url = f"https://{url}"

    if not url.endswith("?"):
        param = "?id=2" # Change this as necessary

    else:
        param = "id=2" # Change this as necessary

    for payload in payloads:
        exploit(url, param, payload)

